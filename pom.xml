<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.atoz</groupId>
    <artifactId>3dmpm-system</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>3DMPMSystem</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- 版本维护列表 -->
        <spring.version>5.1.10.RELEASE</spring.version>
        <mybatisplus.version>3.3.0</mybatisplus.version>
        <lombok.version>1.18.6</lombok.version>
        <junit.version>4.12</junit.version>
        <durid.version>1.1.20</durid.version>
        <fastjson.version>1.2.58</fastjson.version>
        <quartz.version>2.3.2</quartz.version>
        <itextpdf.version>5.5.6</itextpdf.version>
        <ant.version>1.10.5</ant.version>
        <jackson.version>2.9.4</jackson.version>
        <freemarker.version>2.3.28</freemarker.version>
        <slf4j.version>1.7.29</slf4j.version>
        <poi.version>4.1.0</poi.version>
        <ezmorph.version>1.0.6</ezmorph.version>
        <shiro.version>1.4.2</shiro.version>
        <jedis.version>3.1.0</jedis.version>
        <junrar.version>4.0.0</junrar.version>
        <httpcomponents.version>4.5.9</httpcomponents.version>
        <logback.version>1.2.3</logback.version>
        <jsonpath.version>2.4.0</jsonpath.version>
        <dom4j.version>1.6.1</dom4j.version>
        <jaxen.version>1.2.0</jaxen.version>
        <commonslang3.version>3.9</commonslang3.version>
        <commonstext.version>1.8</commonstext.version>
        <fileupload.version>1.4</fileupload.version>
        <collections.version>3.2.2</collections.version>
        <servletapi.version>3.0-alpha-1</servletapi.version>
        <ehcache.version>2.4.5</ehcache.version>

    </properties>

    <dependencies>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>



        <!-- mybaits-plus 基于java的持久层框架-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus</artifactId>
            <version>${mybatisplus.version}</version>
        </dependency>
        <!--		<dependency>-->
        <!--			<groupId>org.mybatis</groupId>-->
        <!--			<artifactId>mybatis</artifactId>-->
        <!--			<version>3.2.8</version>-->
        <!--		</dependency>-->
        <!--		<dependency>-->
        <!--			<groupId>org.mybatis</groupId>-->
        <!--			<artifactId>mybatis-spring</artifactId>-->
        <!--			<version>1.1.1</version>-->
        <!--		</dependency>-->

        <!-- lombok 提供了一组有用的注释，用来消除Java类中的大量样板代码 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- junit 单元测试框架 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- start shiro Apache Shiro是一个强大且易用的Java安全框架,执行身份验证、授权、密码和会话管理 start-->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-cas</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <!-- end shiro end -->

        <!-- druid alibaba数据库连接池实现 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
            <version>${durid.version}</version>
        </dependency>
        <!-- fastjson alibaba开源JSON解析库 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!-- start jackson springmvc默认使用jackson解析json  com.fasterxml.jackson 为新版 老版为org.codehaus.jackson start -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <!-- end jackson end -->

        <!-- servlet-api -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servletapi.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commonslang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commonstext.version}</version>
        </dependency>


        <!-- freemarker 模板引擎  即一种基于模板和要改变的数据， 并用来生成输出文本的通用工具 -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker.version}</version>
        </dependency>

        <!-- 一般创建工程，建议通过slf4j设计日志系统，方便扩展 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

<!--        &lt;!&ndash; start logkack由log4j创始人设计的一个开源日志组件 要与SLF4J结合起来 start&ndash;&gt;-->
<!--        &lt;!&ndash; 提供了LogBack的核心功能，是另外两个组件的基础 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>ch.qos.logback</groupId>-->
<!--            <artifactId>logback-core</artifactId>-->
<!--            <version>${logback.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; 实现了Slf4j的API，所以当想配合Slf4j使用时，需要引入logback-classic &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>ch.qos.logback</groupId>-->
<!--            <artifactId>logback-classic</artifactId>-->
<!--            <version>${logback.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; 为了集成Servlet环境而准备的，可提供HTTP-access的日志接口 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>ch.qos.logback</groupId>-->
<!--            <artifactId>logback-access</artifactId>-->
<!--            <version>${logback.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; end logback end &ndash;&gt;-->
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.13.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.13.0</version>
        </dependency>

        <!-- jedis Redis官方推荐的Java连接开发工具 -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>

        <!-- quartz 定时任务框架 -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>${quartz.version}</version>
        </dependency>

        <!-- itext 生成PDF的java组件 -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>${itextpdf.version}</version>
            <type>pom</type>
        </dependency>

        <!-- ant 将软件编译等步骤联系加以自动化 -->
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>${ant.version}</version>
        </dependency>

        <!-- start POI Apache POI提供API给Java程序对Microsoft Office格式档案读和写的功能 start -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <!-- end POI end -->

        <!-- junrar Java实现的rar文件压缩和解压缩的开源类库 -->
        <dependency>
            <groupId>com.github.junrar</groupId>
            <artifactId>junrar</artifactId>
            <version>${junrar.version}</version>
        </dependency>

        <!-- start httpcomponents 用来提供高效的、最新的、功能丰富的支持 HTTP 协议的客户端/服务器编程工具包 start-->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpcomponents.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-cache</artifactId>
            <version>${httpcomponents.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpcomponents.version}</version>
        </dependency>
        <!-- end httpcomponents end -->

        <!-- JsonPath 是一种信息抽取类库，是从JSON文档中抽取指定信息的工具 -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${jsonpath.version}</version>
        </dependency>

        <!-- commons-fileupload 文件上传工具包 -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${fileupload.version}</version>
        </dependency>

        <!-- commons-collections	扩展和增加标准的 Java Collection框架 -->
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${collections.version}</version>
        </dependency>

        <!-- Dozer 是Java Bean到Java Bean映射器，它以递归方式将数据从一个对象复制到另一个对象 最近更新为2014年-->
        <dependency>
            <groupId>net.sf.dozer</groupId>
            <artifactId>dozer</artifactId>
            <version>5.3.2</version>
        </dependency>

        <!--ezmorph 一个简单的java类库用于将一种对象转换成另外一种对象 最近更新为2008年 -->
        <dependency>
            <groupId>net.sf.ezmorph</groupId>
            <artifactId>ezmorph</artifactId>
            <version>${ezmorph.version}</version>
        </dependency>

        <!--jaxen  一个开源的XPath库-->
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>${jaxen.version}</version>
        </dependency>

        <!-- dom4j  开源XML解析包 最近更新为2006年 -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
        </dependency>


        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.diboot/diboot-core -->
        <dependency>
            <groupId>com.diboot</groupId>
            <artifactId>diboot-core</artifactId>
            <version>2.0.3</version>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
    </build>



</project>
